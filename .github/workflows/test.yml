name: Run SageMaker Script

on:
  push:
    branches:
      - main

jobs:
  run-sagemaker-script:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ap-south-1 # Replace with your AWS region
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      # SAGEMAKER_INSTANCE_DNS: 13.126.13.44      # Replace with your SageMaker instance DNS or IP
      # SAGEMAKER_USERNAME: ec2-user  # Replace with your SageMaker instance username
      # SCRIPT_PATH: /home/ec2-user/SageMaker/script.sh  # Replace with the path to your script on the SageMaker instance
  
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        
      - name: Configure AWS Credentials
        run: aws configure set aws_access_key_id ${{ env.AWS_ACCESS_KEY_ID }} && aws configure set aws_secret_access_key ${{ env.AWS_SECRET_ACCESS_KEY }} && aws configure set region ${{ env.AWS_REGION }}
      
      - name: Check if Secret Exists
        id: check_secret
        run: |
          aws secretsmanager describe-secret --secret-id sample7 || echo "::set-output name=secret_exists::false"
  
      - name: Update or Create Secret
        run: |
          secret_exists=${{ steps.check_secret.outputs.secret_exists }} 
          
          if [ "$secret_exists" == "false" ]; then
            aws secretsmanager create-secret \
              --name sample7 \
              --secret-string '{"${{ env.AWS_ACCESS_KEY_ID }}":"'"${{ env.AWS_SECRET_ACCESS_KEY }}"'"}' --region ap-south-1
          else
            aws secretsmanager update-secret \
              --secret-id sample7 \
              --secret-string '{"${{ env.AWS_ACCESS_KEY_ID }}":"'"${{ env.AWS_SECRET_ACCESS_KEY }}"'","key2":"value2","key3":"value3"}' \
              --region ap-south-1
          fi

      # - name: Store Secrets in AWS Secrets Manager
      #   run: |
          
      #     # aws secretsmanager create-secret --name sample3 --secret-string '{"${{ env.AWS_ACCESS_KEY_ID }}":"'"${{ env.AWS_SECRET_ACCESS_KEY }}"'","key2":"value2"}' --region ap-south-1
        

      #     aws secretsmanager update-secret \
      #       --secret-id sample4 \
      #       --secret-string '{"${{ env.AWS_ACCESS_KEY_ID }}":"'"${{ env.AWS_SECRET_ACCESS_KEY }}"'","key2":"value2","key3":"value3"}' \
      #       --region ap-south-1

      - name: Start notebook instance
        run: |
          aws sagemaker start-notebook-instance --notebook-instance-name sample2

      - name: wait for 20 min
        run: sleep 1200  # seconds

      - name: Stop notebook instance
        run: |
          aws sagemaker stop-notebook-instance --notebook-instance-name sample2

          aws secretsmanager describe-secret --secret-id YourSecret --region ap-south-1 > /dev/null 2>&1

          if [ $? -ne 0 ]; then
          aws secretsmanager create-secret --name YourSecret --secret-string '{"YourAPIKeyField":"'"${{ secrets.API_KEY }}"'"}' --region ap-south-1
          echo "Secret created successfully."
          else
          echo "Secret already exists. Skipping creation."
          fi

